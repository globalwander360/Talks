Bilkul bhai! ðŸ’¯ Tere requirement full clear hai:

> âœ… Tu CxtProdCodeEntity se data fetch karega (DB se),
âœ… Aur return karega CxtProdCode (DTO) object as response.
âœ… Tu chah raha hai: Service interface + ServiceImpl structure.




---

ðŸ”§ Final Structure (Updated)

src/
â”œâ”€â”€ controller/
â”‚   â””â”€â”€ CxtProdCodeController.java
â”œâ”€â”€ dto/
â”‚   â””â”€â”€ CxtProdCode.java        âœ… (DTO layer)
â”œâ”€â”€ entity/
â”‚   â””â”€â”€ CxtProdCodeEntity.java âœ… (Entity from DB)
â”œâ”€â”€ repository/
â”‚   â””â”€â”€ CxtProdCodeRepository.java
â”œâ”€â”€ service/
â”‚   â”œâ”€â”€ CxtProdCodeService.java      âœ… Interface
â”‚   â””â”€â”€ CxtProdCodeServiceImpl.java âœ… Implementation


---

âœ… 1. CxtProdCodeEntity.java (Entity)

package com.example.demo.entity;

import jakarta.persistence.*;
import lombok.*;

@Entity
@Table(name = "cxt_prod_code")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class CxtProdCodeEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "product_code")
    private String productCode;
}


---

âœ… 2. CxtProdCode.java (DTO)

package com.example.demo.dto;

import lombok.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class CxtProdCode {
    private Long id;
    private String productCode;
}


---

âœ… 3. CxtProdCodeRepository.java

package com.example.demo.repository;

import com.example.demo.entity.CxtProdCodeEntity;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface CxtProdCodeRepository extends JpaRepository<CxtProdCodeEntity, Long> {
}


---

âœ… 4. CxtProdCodeService.java (Interface)

package com.example.demo.service;

import com.example.demo.dto.CxtProdCode;
import java.util.List;

public interface CxtProdCodeService {
    List<CxtProdCode> getAllCodes();
}


---

âœ… 5. CxtProdCodeServiceImpl.java (Implementation)

package com.example.demo.service;

import com.example.demo.dto.CxtProdCode;
import com.example.demo.entity.CxtProdCodeEntity;
import com.example.demo.repository.CxtProdCodeRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class CxtProdCodeServiceImpl implements CxtProdCodeService {

    @Autowired
    private CxtProdCodeRepository repository;

    @Override
    public List<CxtProdCode> getAllCodes() {
        List<CxtProdCodeEntity> entities = repository.findAll();
        return entities.stream()
                .map(e -> new CxtProdCode(e.getId(), e.getProductCode()))
                .collect(Collectors.toList());
    }
}


---

âœ… 6. CxtProdCodeController.java

package com.example.demo.controller;

import com.example.demo.dto.CxtProdCode;
import com.example.demo.service.CxtProdCodeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/cxt-prod-code")
public class CxtProdCodeController {

    @Autowired
    private CxtProdCodeService service;

    @GetMapping
    public ResponseEntity<List<CxtProdCode>> getCxtProdCode(
            @RequestParam String s,
            @RequestParam(required = false) Integer integer,
            @RequestParam(required = false) String s1) {

        List<CxtProdCode> codes = service.getAllCodes(); // use karega DTO
        return ResponseEntity.ok(codes);
    }
}


---

âœ… Sample Output (API Response)

[
  { "id": 1, "productCode": "EC" },
  { "id": 2, "productCode": "EL" },
  { "id": 3, "productCode": "IC" },
  { "id": 4, "productCode": "IG" }
]


---

Bhai isse tu entity aur DTO ka separation maintain karega, jo best practice hai â€” especially jab large-scale system me migrate kare.

Agar tu mapping ko aur clean banana chahta hai using ModelMapper ya MapStruct toh wo bhi kar sakte hain.

Agle step ke liye bol de â€” Swagger? Test case? Frontend bind?
Main yahin hoon bhai! ðŸš€
